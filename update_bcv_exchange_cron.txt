# Instrucciones para ejecutar el comando update_bcv_exchange automáticamente todos los días a las 6am

# --- Windows (Task Scheduler) ---

# 1. Crea un archivo .bat en la carpeta backend, por ejemplo: update_bcv_exchange.bat
#    Contenido del archivo (ajusta las rutas a tu entorno):
#
#    @echo off
#    cd /d C:\Users\PC\innovaerp\backend
#    "C:\ruta\a\tu\python.exe" manage.py update_bcv_exchange >> logs\update_bcv_exchange.log 2>&1
#
#    Ejemplo:
#    @echo off
#    cd /d C:\Users\PC\innovaerp\backend
#    "C:\Users\PC\AppData\Local\Programs\Python\Python311\python.exe" manage.py update_bcv_exchange >> logs\update_bcv_exchange.log 2>&1
#
# 2. Abre el Programador de tareas de Windows (Task Scheduler).
#    - Crea una nueva tarea básica.
#    - Programa la tarea para que se ejecute diariamente a las 6:00am.
#    - En "Acción", selecciona "Iniciar un programa" y elige el archivo .bat creado.
#    - Guarda la tarea.
#
# 3. Asegúrate de que la carpeta logs\ exista y tenga permisos de escritura.

# --- Linux (crontab) ---
# 1. Abre el crontab del usuario que ejecuta el backend (usualmente 'ubuntu', 'django', etc.)
#    Puedes editar el crontab con:
#    crontab -e
#
# 2. Agrega la siguiente línea al final del archivo (ajusta la ruta a tu entorno y proyecto):
#
#    0 6 * * * cd /ruta/absoluta/a/innovaerp/backend && /ruta/absoluta/a/tu/entorno/bin/python manage.py update_bcv_exchange >> logs/update_bcv_exchange.log 2>&1
#
#    Ejemplo:
#    0 6 * * * cd /home/usuario/innovaerp/backend && /home/usuario/venv/bin/python manage.py update_bcv_exchange >> logs/update_bcv_exchange.log 2>&1
#
# 3. Asegúrate de que la carpeta logs/ exista y tenga permisos de escritura.

# --- Docker ---
# Si usas Docker, puedes programar el cron en el host o usar un contenedor dedicado para tareas programadas.
